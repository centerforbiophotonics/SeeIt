:css
  #init-page {
    margin: 10px;
  }

  #graph-menu-template, #graph-data-menu-template, #data-menu-template {
    display: none;
  }


#init-page
  %h1 SeeIt Initialization Wizard

  #seeit-init-wizard
    %form{:action => "#"}
      %h2 General UI Options
      .field
        = label_tag 'ui[editiable]', 'Editable:'
        = hidden_field_tag 'ui[editiable]', 'false'
        = check_box_tag 'ui[editiable]', 'true'
      .field
        = label_tag 'ui[spreadsheet]', 'Spreadsheet:'
        = hidden_field_tag 'ui[spreadsheet]', 'false'
        = check_box_tag 'ui[spreadsheet]', 'true'
      .field
        = label_tag 'ui[data_selector]', 'Data Selection Menu:'
        = hidden_field_tag 'ui[data_selector]', 'false'
        = check_box_tag 'ui[data_selector]', 'true'
      .field
        = label_tag 'ui[options_bar]', 'Top Option Bar:'
        = hidden_field_tag 'ui[options_bar]', 'false'
        = check_box_tag 'ui[options_bar]', 'true'
      .field
        = label_tag 'ui[graph_add_remove]', 'Graph Add/Remove:'
        = hidden_field_tag 'ui[graph_add_remove]', 'false'
        = check_box_tag 'ui[graph_add_remove]', 'true'
      .field
        = label_tag 'ui[dataset_add_remove]', 'Dataset Add/Remove:'
        = hidden_field_tag 'ui[dataset_add_remove]', 'false'
        = check_box_tag 'ui[dataset_add_remove]', 'true'

      .field
        = button_tag "Customize Appearance", :type => "button", :id => "customize-appearance"


      %h2 Data
      #data
      .field
        = button_tag "Add Data", :type => "button", :id => "add-data"

      %h2 Graphs
      #graphs
      .field
        = button_tag "Add Graph", :type => "button", :id => "add-graph"

      %h2 Start and Share
      .field
        = button_tag "Display Unique Link For This Configuration", :type => "button", :id => "show_link"
      .field
        = button_tag "Show Javascript Initialization Code For This Configuration", :type => "button", :id => "show_init_code"
      .field
        = button_tag "Run SeeIt With This Configuration", :type => "button", :id => "run"

#data-menu-template
  = label_tag 'data[DATAINDEX][type]', 'Data Type:'
  = select_tag 'data[DATAINDEX][type]', options_for_select([['csv', 'csv'],['json', 'json'],['google spreadsheet', 'google spreadsheet']])
  = label_tag 'data[DATAINDEX][url]', 'URL'
  = text_field_tag 'data[DATAINDEX][url]', '' 
  = button_tag "Remove Data", :type => "button", :id => "remove-data-DATAINDEX", :class => "remove-data"

#graph-menu-template
  = label_tag 'graphs[GRAPHINDEX][type]', 'Graph Type:'
  = text_field_tag 'graphs[GRAPHINDEX][type]', 'Box Plot'
  = button_tag "Remove Graph", :type => "button", :id => "remove-graphs-GRAPHINDEX", :class => "remove-graphs"
  #graphs-GRAPHINDEX-data
  = button_tag "Add Data", :type => "button", :id => "add-graphs-GRAPHINDEX-data", :class => "add-graphs-data"

#graph-data-menu-template
  = label_tag 'graphs[GRAPHINDEX][data][GRAPHDATAINDEX][dataset_title]', 'Dataset:'
  = text_field_tag 'graphs[GRAPHINDEX][data][GRAPHDATAINDEX][dataset_title]', 'Dataset 2'

  = label_tag 'graphs[GRAPHINDEX][data][GRAPHDATAINDEX][column_header]', 'Column:'
  = text_field_tag 'graphs[GRAPHINDEX][data][GRAPHDATAINDEX][column_header]', 'Kia'

  = label_tag 'graphs[GRAPHINDEX][data][GRAPHDATAINDEX][role_in_graph]', 'Role in Graph:'
  = text_field_tag 'graphs[GRAPHINDEX][data][GRAPHDATAINDEX][role_in_graph]', 'default'

  = button_tag "Remove Data", :type => "button", :id => "remove-graphs-GRAPHINDEX-data-GRAPHDATAINDEX", :class => "remove-graphs-data"

:javascript
  var graphs = [];
  var data = [];

  $(function(){
    $("#show_init_code").click(function(){
      var options = $('#seeit-init-wizard form').serializeObject();

      //Replace string value for checkboxes with boolean value
      for (var key in options.ui){
        if (options.ui[key] === 'false')
          options.ui[key] = false;
        else if (options.ui[key] === 'true')
          options.ui[key] = true;
      }
      console.log(options);
    });

    $("#add-data").click(function(){
      var index = data.length;
      var $menu = $("<div>", {id: "data-"+index});
      var raw = $("#data-menu-template").html().replace(new RegExp('DATAINDEX', 'g'), index);

      $menu.append(raw);
      data.push(0);
      $("#data").append($menu);

      register_remove_data();
    });



    $("#add-graph").click(function(){
      var index = graphs.length;
      var $menu = $("<div>", {id: "graph-"+index});
      var raw = $("#graph-menu-template").html().replace(new RegExp('GRAPHINDEX', 'g'), index);


      $menu.append(raw);
      graphs.push(0);
      $("#graphs").append($menu);

      register_add_graphs_data();
      register_remove_graph();
    });

    function register_add_graphs_data(){
      $(".add-graphs-data").off("click").on("click", function(){

        var graphIndex = $(this).attr("id").split("-")[2];
        var graphDataIndex = graphs[parseInt(graphIndex)];

        var $menu = $("<div>", {id: "graphs-"+graphIndex+"-data-"+graphDataIndex});

        var raw = $("#graph-data-menu-template").
          html().
          replace(new RegExp('GRAPHINDEX', 'g'), graphIndex).
          replace(new RegExp('GRAPHDATAINDEX', 'g'), graphDataIndex);

        $menu.append(raw);

        graphs[parseInt(graphIndex)]++;

        $("#graphs-"+graphIndex+"-data").append($menu);

        register_remove_graphs_data();
      });
    }

    function register_remove_data(){
      $(".remove-data").off("click").on("click", function(){

        var dataIndex = $(this).attr("id").split("-")[2];

        $("#data-"+dataIndex).remove();

        data.forEach(function(d, i){
          if(i > dataIndex){
            var data = $("#data-"+i)

            var new_data_html = data.
              html().
              replace(new RegExp("data\\-"+i, 'g'), "data-"+(i-1)).
              replace(new RegExp("data\\["+i, 'g'), "data["+(i-1)).
              replace(new RegExp("data_"+i, 'g'), "data_"+(i-1));

            data.html(new_data_html);
            data.attr("id", "data-"+(i-1));
          }
        });

        data.splice(dataIndex, 1);
        register_remove_data();
      });
    }

    function register_remove_graph(){
      $(".remove-graphs").off("click").on("click", function(){

        var graphIndex = $(this).attr("id").split("-")[2];

        $("#graph-"+graphIndex).remove();

        graphs.forEach(function(d, i){
          if (i > graphIndex){
            var graph = $("#graph-"+i);

            var new_graph_html = graph.
              html().
              replace(new RegExp("graphs\\-"+i, 'g'), "graphs-"+(i-1)).
              replace(new RegExp("graphs\\["+i, 'g'), "graphs["+(i-1)).
              replace(new RegExp("graphs_"+i, 'g'), "graphs_"+(i-1));

            graph.html(new_graph_html);
            graph.attr("id", "graph-"+(i-1));
          }
        });

        graphs.splice(graphIndex, 1);
        register_add_graphs_data();
        register_remove_graph();
      });
    }

    function register_remove_graphs_data(){
      $(".remove-graphs-data").off("click").on("click", function(){

        var graphIndex = $(this).attr("id").split("-")[2];
        var dataIndex = $(this).attr("id").split("-")[4];

        $("#graphs-"+graphIndex+"-data-"+dataIndex).remove();

        if (dataIndex < graphs[graphIndex]-1){
          for (var i = parseInt(dataIndex)+1; i < graphs[graphIndex]; i++){
            var graphData = $("#graphs-"+graphIndex+"-data-"+i);

            console.log( graphData.html());

            var newHtml = graphData.html().
               replace(new RegExp("data\\-"+i, 'g'), "data-"+(i-1)).
               replace(new RegExp("data\\]\\["+i, 'g'), "data]["+(i-1)).
               replace(new RegExp("data_"+i, 'g'), "data_"+(i-1));

            graphData.html(newHtml);
            graphData.attr("id", "graphs-"+graphIndex+"-data-"+(i-1));
          }

        }

        graphs[graphIndex]--;

        register_remove_graphs_data();
      });
    }
  });
